#!/bin/zsh

emulate -L zsh
local thedir=. cmake_build_type type is_k builddir q_opt

if [[ $1 == -C ]] ; then
    shift
    if [[ ! -d $1 ]] ; then
        print Expecting directory name after -C option
        return 1
    fi
    thedir=$1
    shift
fi

if [[ $1 == -k ]] ; then
    is_k=$1
    shift
fi

thedir=$thedir:A

if [[ $thedir == */wt/examples/* ]] ; then
    builddir=$thedir:h:h/debug/examples/$thedir:t
    command /usr/bin/make -C $builddir $is_k $*
elif [[ -a $thedir/CMakeLists.txt ]] ; then
    cmake_build_type=${(M)argv:#-DCMAKE_BUILD_TYPE=*}
    if [[ -n $cmake_build_type ]] ; then
        type=${cmake_build_type#-DCMAKE_BUILD_TYPE=}
        argv=(${argv:#-DCMAKE_BUILD_TYPE=*})
        print User specified build type $type
    elif [[ -n ${(M)${argv:l}:#debug} ]] ; then
        type=Debug
        argv=(${${argv:l}:#debug})
    elif [[ -n ${(M)${argv:l}:#release} ]] ; then
        type=Release
        argv=(${${argv:l}:#release})
    elif [[ -a $thedir/.lastmake ]] ; then
        read type < $thedir/.lastmake
    fi
    if [[ -z $type ]] ; then
        print 1>&2 "\nPlease specify debug, release or -DCMAKE_BUILD_TYPE=<cofiguration> argument\n"
        return 1
    fi
    print $type > $thedir/.lastmake
    builddir=.$type
    [[ -d $builddir ]] || mkdir $builddir || return 2
    if [[ -a $builddir/Makefile ]] ; then
        command /usr/bin/make -C $builddir $is_k $*
    else
        (cd $builddir \
            && cmake -DCMAKE_BUILD_TYPE=$type $* $thedir \
            && command /usr/bin/make $is_k $*)
    fi
elif [[ -a $thedir/Jamfile || -a $thedir/Jamroot ]] ; then
    # bjam -q (quick) option is opposite of make -k
    q_opt=-q
    if [[ -n $is_k ]] ; then
        q_opt=
    fi
    if [[ $thedir == $PWD:A ]] ; then
        bjam $BJAMOPTS $q_opt $*
    else
        ( cd $thedir && bjam $BJAMOPTS $q_opt $* )
    fi
else
    command /usr/bin/make -C $thedir $MAKEOPTS $is_k $*
fi

